{% extends 'base.html.twig' %}

{% block stylesheet %}
    <link rel="stylesheet" href="ui-kit/dist/plugins/jqgrid/ui.jqgrid.min.css">
    <link rel="stylesheet" href="ui-kit/dist/plugins/drop/drop.min.css">
{% endblock %}

{% block body %}
    <div class="show-panel">
        <div class="show-panel-body">
            <div class="pad-top-20 pad-btm-20">
                <button type="button" class="btn btn-success export">{{ export_button|trans }}</button>
                <button type="button" class="btn btn-primary shift" data-toggle="modal" data-target="#shift-popup">Schimba tura</button>
                {% if allow_data_reset %}
                    <button type="button" class="btn btn-danger reset">Reseteaza</button>
                {% endif %}
            </div>
            <table id="export-confirm-table" class="table table-bordered word-break"></table>
            <div id="export-confirm-pager"></div>
            <div class="pad-top-20">
                <button type="button" class="btn btn-success export">{{ export_button|trans }}</button>
            </div>
        </div>
    </div>

{% endblock %}

{% block modal %}
    <div class="modal fade" id="shift-popup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"><i class="fa fa-remove"></i></span></button>
                    <h4 class="modal-title" id="shift-popup-label">Modifica ture</h4>
                </div>
                <div class="modal-body">
                    <p>Modifica tura pentru: <strong id="shift-change-list" class=""></strong></p>

                    <label>Ziua</label>
                    <div class="input-group">
                        <select class="form-control" id="shift-change-date-select" required="required">
                            <option value="">-</option>
                            {% set timekeepDetails = content|first %}
                            {% for date,dayDetails in timekeepDetails %}
                                <option value="date_{{ date|replace({' ': ''}) }}_in">{{ date }}</option>
                            {% endfor %}
                        </select>
                    </div>

                    <label>Decalaj tura (ore)</label>
                    <div class="input-group col-xs-2">
                        <input type="text" class="form-control" value="8">
                    </div>
                    <div class="help-block">Adauga diferenta de ore pentru a ajunge la ora inceperii turei. Ex: Daca tura
                        standard incepe la 09:00, pentru a obtine tura care incepe la 14:00 vei adauga 5 ore.</div>

                </div>
                <div class="modal-footer">
                    <div class="pull-right panel-controls">
                        <button class="btn btn-success" data-dismiss="modal" id="shift-change-confirm"><span>Modifica</span></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascript %}
    <script src="ui-kit/dist/plugins/jqgrid/i18n/grid.locale-{{ app.request.defaultLocale }}.js"></script>
    <script src="ui-kit/dist/plugins/jqgrid/jquery.jqGrid.min.js"></script>
    <script src="ui-kit/dist/plugins/stickyKit/stickyKit.min.js"></script>
    <script src="ui-kit/dist/plugins/tether/tether.min.js"></script>
    <script src="ui-kit/dist/plugins/drop/drop.min.js"></script>
    <script type="text/javascript" language="javascript" src="js/jszip.min.js"></script>
    <script src="ui-kit/dist/plugins/datetimepicker/moment.2.10.6.min.js"></script>
    <script src="ui-kit/dist/plugins/datetimepicker/bootstrap-datetimepicker.4.17.37.min.js"></script>
    <script src="ui-kit/dist/plugins/datetimepicker/locales/bootstrap-datetimepicker.min.{{ app.request.defaultLocale }}.js"></script>

    <script type="text/javascript">
        function getListingData() {

            var dataSet = [
                {% for employeeName,timekeepDetails in content %}
                {
                    id: "{{ loop.index }}",
                    name: "{{ employeeName }}",
                    {% for date,dayDetails in timekeepDetails %}
                    "date_{{ date|replace({' ': ''}) }}_in": "{{ timekeepDetails[date][0] }}",
                    "date_{{ date|replace({' ': ''}) }}_out": "{{ timekeepDetails[date][1] }}",
                    "date_{{ date|replace({' ': ''}) }}_break": "{{ timekeepDetails[date][2] }}",
                    "date_{{ date|replace({' ': ''}) }}_total": "{{ timekeepDetails[date][3] }}",
                    {% endfor %}
                },
                {% endfor %}
            ];

            return dataSet;
        }

        $(document).ready(function () {
            var listingParameters = {
                table: '#export-confirm-table',
                pager: '#export-confirm-pager',
                datatype: 'jsonstring',
                caption: 'Report',
                datastr: getListingData(),
                multiselect: true,
                shrinkToFit: false,
                sortable: false,
                colModel: [
                    {
                        label: '{{ 'actions'|trans }}',
                        name: 'actions',
                        width: 60,
                        formatter: 'actions',
                        formatoptions: {
                            keys: true,
                            delbutton: false
                        },
                        exportcol: false
                    },
                    { name: 'id', index: 'id', key: true, hidden: true, width: "20" },
                    { label: '{{ column_name|trans }}', name: 'name', index: 'name', width: "150", editable: false },
                    {% set timekeepDetails = content|first %}
                    {% for date,dayDetails in timekeepDetails %}
                    { label: '{{ subcolumn_in|trans }}', name: 'date_{{ date|replace({' ': ''}) }}_in', index: 'date_{{ date|replace({' ': ''}) }}_in', width: "70", editable: true },
                    { label: '{{ subcolumn_out|trans }}', name: 'date_{{ date|replace({' ': ''}) }}_out', index: 'date_{{ date|replace({' ': ''}) }}_out', width: "70", editable: true },
                    { label: '{{ subcolumn_break|trans }}', name: 'date_{{ date|replace({' ': ''}) }}_break', index: 'date_{{ date|replace({' ': ''}) }}_break', width: "50", editable: true },
                    { label: '{{ subcolumn_total|trans }}', name: 'date_{{ date|replace({' ': ''}) }}_total', index: 'date_{{ date|replace({' ': ''}) }}_total', width: "70", editable: true },
                    {% endfor %}
                ]
            };

            var photonGrid = new PhotonJqGrid(listingParameters)
            photonGrid.init();
            $(photonGrid.grid).jqGrid('setGroupHeaders', {
                useColSpanStyle: false,
                groupHeaders:[
                    {% for date,dayDetails in timekeepDetails %}
                    {startColumnName: 'date_{{ date|replace({' ': ''}) }}_in', numberOfColumns: 4, titleText: '{{ date }}' },
                    {% endfor %}
                ]
            });

            $("button.export").on('click', function(){
                console.log('Exporting table into file: {{ export_filename }}')
                $(photonGrid.grid).jqGrid('exportToExcel', {
                    fileName : '{{ export_filename }}'
                })
            });

            $('button.shift').on('click', function() {
                var selectedIds = getSelectedRows();
                if (selectedIds.length == 0) {
                    return false;
                }
                var shiftChangeList = [];
                $(selectedIds).each(function (key, val) {
                    var rowData = $(photonGrid.grid).jqGrid('getRowData', val);
                    console.log(rowData);
                    shiftChangeList[key] = rowData['name'];
                });
                $('#shift-change-list').text(shiftChangeList.join(', '));

                return true;
            });

            function getSelectedRows() {
                var rowKey = $(photonGrid.grid).getGridParam("selrow");
                if (!rowKey) {
                    alert("No rows are selected");
                    return [];
                }

                return $(photonGrid.grid).getGridParam("selarrrow");
            }

            $('#shift-change-confirm').on('click', function(){
                updateShift();
            });

            function updateShift() {
                var requestedDate = $('#shift-change-date-select').val();
                var selectedIds = getSelectedRows();
                $(selectedIds).each(function (key, val) {
                    var rowData = $(photonGrid.grid).jqGrid('getRowData', val);
                    rowData[requestedDate] = '08:59';
                    $(photonGrid.grid).jqGrid('setRowData', val, rowData);
                });
            }
        });
    </script>
{% endblock %}